import{_ as a,c as t,o as n,a2 as o}from"./chunks/framework.DQS5QPof.js";const h=JSON.parse('{"title":"聊天室介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/chat.md","filePath":"guide/chat.md"}'),s={name:"guide/chat.md"},e=o(`<h1 id="聊天室介绍" tabindex="-1">聊天室介绍 <a class="header-anchor" href="#聊天室介绍" aria-label="Permalink to &quot;聊天室介绍&quot;">​</a></h1><p><img src="https://jsd.cdn.noisework.cn/gh/rcy1314/tuchuang@main/uPic/chat.png" alt="chat">本效果引入的为cbox</p><p><a href="https://www.cbox.ws/" target="_blank" rel="noreferrer">https://www.cbox.ws/</a></p><p>意为在线聊天盒子，界面可定制、支持中文，免费版支持存储100条信息、每日1000访客，支持头像和自定义主题，但免费版不支持在线IP显示。我很喜欢它的界面，但还有一点比较坑，免费版你在嵌入代码时显示的是cbox的Logo，更改方案：下载要引入的JS文件并在代码处更改，如图，此处可不按官方自定义显示名称及布局大小颜色</p><p><img src="https://jsd.cdn.noisework.cn/gh/rcy1314/tuchuang@main/uPic/4305e9f0477e4f629d0b3445e9b052fb.png" alt="img"></p><h2 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h2><p>在html中代码为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>        window[&#39;CboxReady&#39;] = function (Cbox) {</span></span>
<span class="line"><span>            Cbox(&#39;button&#39;, &#39;3-3523748-9k93aT&#39;);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    &lt;/script&gt;</span></span>
<span class="line"><span>&lt;script src=&quot;./js/emb.js&quot; async&gt;&lt;/script&gt;</span></span></code></pre></div><p>其中3-3523748-9k93aT为我个人的id，如果你要引入请改为你自己的</p><p>引入的js为emb.js</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(function () {</span></span>
<span class="line"><span>    var u = window.Cbox || {}, A = u.q || [], l = {}, B = 0, v = function (b, a) { b = b || {}; a = a || {}; for (var c in b) &quot;undefined&quot; === typeof a[c] &amp;&amp; (a[c] = b[c]); return a }, w = function (b, a) {</span></span>
<span class="line"><span>        var c = document.createElement(&quot;iframe&quot;); if (a.url) var d = a.url; else { d = b.split(/-/); var h = &quot;dev&quot; === d[0] ? &quot;dev1&quot; : &quot;www&quot;; d[0].match(/^[0-9]$/) &amp;&amp; (h += d[0]); var f = &quot;&quot;; d[3] &amp;&amp; d[4] &amp;&amp; (f = &quot;&amp;tid=&quot; + d[3] + &quot;&amp;tkey=&quot; + d[4]); d = &quot;https://&quot; + h + &quot;.cbox.ws/box/?boxid=&quot; + d[1] + &quot;&amp;boxtag=&quot; + d[2] + f } d = {</span></span>
<span class="line"><span>            name: &quot;cboxmain&quot;, width: &quot;100%&quot;, height: &quot;100%&quot;, src: d, marginheight: &quot;0&quot;, marginwidth: &quot;0&quot;,</span></span>
<span class="line"><span>            frameborder: &quot;0&quot;, scrolling: &quot;no&quot;, allowtransparency: &quot;yes&quot;, style: &quot;border: 10&quot;</span></span>
<span class="line"><span>        }; for (var g in d) c.setAttribute(g, d[g]); return c</span></span>
<span class="line"><span>    }, C = function (b) {</span></span>
<span class="line"><span>        var a = document.createElement(&quot;style&quot;); a.innerHTML = &quot;.CboxButton {position: fixed;opacity: 1;z-index: 9999;bottom: 0px;right: 0px;width: 120px;height: 30px;transform: rotateZ(-90deg);transform-origin: 60px -30px;padding: 0px 1em;box-sizing: border-box;text-align: center;cursor: pointer;background: rgba(0, 0, 0, 0.79);color: #fff;line-height: 30px;transition: opacity 200ms ease-in, right 200ms ease-in;border-radius: 0 15px 0 0px;}.CboxCount {background: #a6d83f;color: #000;position: absolute;right: -8px;top: -4px;width: 24px;height: 24px;font-size: 12px;line-height: 24px;border-radius: 15px;transform: rotateZ(90deg);overflow: hidden;text-align: center;}.CboxWrap {position: fixed;z-index: 9998;top: 0px;bottom: 0px;right: -&quot; +</span></span>
<span class="line"><span>            b.width + &quot;px;width: &quot; + b.width + &quot;px;background: rgb(51, 51, 51);padding: 0px;line-height: 0;transition: right 200ms ease-in, width 100ms ease-in;}.CboxWrap.Open {right: 0px;}.CboxButton.Open {right: &quot; + b.width + &quot;px;width: 30px;transform: none;padding: 0;border-radius: 15px 0 0 0;}.CboxOpenBtn:after {content: &#39;&quot; + b.label + &quot;&#39;;}.CboxCloseBtn:after {content: &#39;\\\\25B6&#39;;}@media screen and (max-width: &quot; + (b.width + 100) + &quot;px) {.CboxWrap {left: 0;right: 0;width: auto;}.CboxWrap {display: none;}.CboxWrap.Open {display: block;right: 0;width: auto;}.CboxButton.Open {right: 30px;top: 0;border-radius: 0;}body.CboxOpen {overflow: hidden;}}&quot;;</span></span>
<span class="line"><span>        return a</span></span>
<span class="line"><span>    }; l.inline = function (b, a) { a = v({ elem: &quot;cbox&quot;, width: &quot;100%&quot;, serial: 1E6 * Math.random() | 0 }, a); $wrap.style.cssText = &quot;position: relative; width: &quot; + a.width + &quot;; padding: 0; line-height: 0;&quot;; var c = w(b, a); $cont.appendChild(c) }; l.button = function (b, a) {</span></span>
<span class="line"><span>        var c = null; a = v({ background: &quot;#059ad0&quot;, width: 300, serial: 1E6 * Math.random() | 0, label: &quot;聊天室&quot;, showLogo: !0, showCount: &quot;messages&quot;, url: &quot;&quot; }, a); var d = C(a), h = document.head || document.getElementsByTagName(&quot;head&quot;)[0]; h.insertBefore(d, h.children[0]); var f = document.createElement(&quot;div&quot;);</span></span>
<span class="line"><span>        f.className = &quot;CboxButton&quot;; var g = document.createElement(&quot;div&quot;); g.className = &quot;CboxWrap&quot;; var x = w(b, a); g.appendChild(x); B++; document.body.appendChild(g); document.body.appendChild(f); var p = function () {</span></span>
<span class="line"><span>            var e = &quot;&quot;; m ? e = &#39;&lt;span class=&quot;CboxCloseBtn&quot;&gt;&lt;/span&gt;&#39; : (c &amp;&amp; &quot;users&quot; == a.showCount &amp;&amp; (e += &#39;&lt;span class=&quot;CboxCount&quot;&gt;&#39; + (99 &gt; c ? c : &quot;99+&quot;) + &quot;&lt;/span&gt;&quot;), k &amp;&amp; &quot;messages&quot; == a.showCount &amp;&amp; (e += &#39;&lt;span class=&quot;CboxCount&quot;&gt;&#39; + (99 &gt; k ? k : &quot;99+&quot;) + &quot;&lt;/span&gt;&quot;), e = a.showLogo ? e + &#39;&lt;span class=&quot;CboxOpenBtn&quot;&gt;&lt;img src=&quot;&quot; style=&quot;width: 80px; position: absolute; left: -0px; top: -30px&quot;&gt;&lt;/span&gt;&#39; :</span></span>
<span class="line"><span>                e + &#39;&lt;span class=&quot;CboxOpenBtn&quot;&gt;&lt;/span&gt;&#39;); return e</span></span>
<span class="line"><span>        }; f.innerHTML = &quot;Loading... &quot;; var y = !1, m = !1, q = null, r = function (e) { e ? (g.className = &quot;CboxWrap Open&quot;, f.className = &quot;CboxButton Open&quot;, q = document.body.className, document.body.className = &quot;CboxOpen&quot;, k = 0) : (g.className = &quot;CboxWrap&quot;, f.className = &quot;CboxButton&quot;, null !== q &amp;&amp; (document.body.className = q)); e &amp;&amp; !y &amp;&amp; (y = !0); m = e; f.innerHTML = p() }, D = function () {</span></span>
<span class="line"><span>            localStorage &amp;&amp; &quot;string&quot; === typeof localStorage.getItem(&quot;cbox:isOpen&quot;) ? r(&quot;yes&quot; === localStorage.getItem(&quot;cbox:isOpen&quot;)) : r(!1); f.style.opacity =</span></span>
<span class="line"><span>                &quot;1&quot;; f.onclick = function () { r(!m); localStorage &amp;&amp; localStorage.setItem(&quot;cbox:isOpen&quot;, m ? &quot;yes&quot; : &quot;no&quot;) }</span></span>
<span class="line"><span>        }, k = 0; window.addEventListener(&quot;message&quot;, function (e) { if (null !== e.origin.match(/(^|\\.)cbox\\.(ws|im)$/) &amp;&amp; e.source === x.contentWindow) { console.log(e); try { var n = JSON.parse(e.data); &quot;ready&quot; == n.event &amp;&amp; D(); &quot;onliners&quot; == n.event &amp;&amp; (c = n.data, f.innerHTML = p()); &quot;message&quot; == n.event &amp;&amp; (k++, f.innerHTML = p()) } catch (E) { } } }, !1)</span></span>
<span class="line"><span>    }; var t = function () {</span></span>
<span class="line"><span>        var b = arguments[0]; if (l[b]) {</span></span>
<span class="line"><span>            for (var a = [], c = 1; c &lt; arguments.length; c++)a.push(arguments[c]);</span></span>
<span class="line"><span>            l[b].apply(this, a)</span></span>
<span class="line"><span>        } else console.log(&quot;CboxEmbed: call &quot; + b + &quot; not found&quot;)</span></span>
<span class="line"><span>    }, z; for (z in A) t.apply(this, u.q[z]); window.Cbox = t; window.Cbox.s = document.currentScript || !0; window.CboxReady &amp;&amp; window.CboxReady(t)</span></span>
<span class="line"><span>})();</span></span></code></pre></div>`,11),p=[e];function u(i,l,c,r,d,q){return n(),t("div",null,p)}const b=a(s,[["render",u]]);export{h as __pageData,b as default};
